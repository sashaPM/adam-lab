apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusteragents.appdynamics.com
spec:
  group: appdynamics.com
  names:
    kind: Clusteragent
    listKind: ClusteragentList
    plural: clusteragents
    singular: clusteragent
  scope: Namespaced
  version: v1alpha1
  subresources:
    status: {}
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: infravizs.appdynamics.com
spec:
  group: appdynamics.com
  names:
    kind: InfraViz
    listKind: InfraVizList
    plural: infravizs
    singular: infraviz
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: adams.appdynamics.com
spec:
  group: appdynamics.com
  names:
    kind: Adam
    listKind: AdamList
    plural: adams
    singular: adam
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          type: object
        status:
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: appdynamics-operator
  namespace: appdynamics
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: appdynamics-infraviz
  namespace: appdynamics
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: appdynamics-infraviz
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'
spec:
  privileged: true
  allowPrivilegeEscalation: true
  allowedCapabilities:
  - '*'
  volumes:
  - '*'
  hostNetwork: true
  hostIPC: true
  hostPID: true
  hostPorts:
  - min: 0
    max: 65535
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: appdynamics-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - services
  - endpoints
  - persistentvolumeclaims
  - events
  - configmaps
  - secrets
  - resourcequotas
  - nodes
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - '*'
- apiGroups: 
  - "batch"
  - "extensions"
  resources: 
  - "jobs"
  verbs: 
  - "get"
  - "list"
  - "watch"
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appdynamics.com
  resources:
  - '*'
  - clusteragents
  verbs:
  - '*'
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appdynamics-operator
subjects:
- kind: ServiceAccount
  name: appdynamics-operator
  namespace: appdynamics  
roleRef:
  kind: ClusterRole
  name: appdynamics-operator
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appdynamics-infraviz
subjects:
- kind: ServiceAccount
  name: appdynamics-infraviz
  namespace: appdynamics  
roleRef:
  kind: ClusterRole
  name: appdynamics-operator
  apiGroup: rbac.authorization.k8s.io
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appdynamics-infraviz
  namespace: appdynamics
rules:
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - appdynamics-infraviz
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: appdynamics-infraviz
  namespace: appdynamics
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: appdynamics-infraviz
subjects:
- kind: ServiceAccount
  name: appdynamics-infraviz
  namespace: appdynamics
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appdynamics-operator
  namespace: appdynamics
spec:
  replicas: 1
  selector:
    matchLabels:
      name: appdynamics-operator
  template:
    metadata:
      labels:
        name: appdynamics-operator
    spec:
      serviceAccountName: appdynamics-operator
      containers:
        - name: appdynamics-operator
          image: docker.io/appdynamics/cluster-agent-operator:latest
          ports:
          - containerPort: 60000
            name: metrics
          command:
          - appdynamics-operator
          imagePullPolicy: Always
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          env:
            - name: WATCH_NAMESPACE
              value: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "appdynamics-operator"



